@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<div class="btn-group ml-auto">
    <button type="button" class="btn btn-warning dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Account</button>
    <div class="dropdown-menu dropdown-menu-right">
        @if (SignInManager.IsSignedIn(User))
        {
            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity.Name!</a>
            <form class="form-inline text-center" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn btn-secondary btn-block">Logout</button>
            </form>
        }
        else
        {
            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Register">Register</a>
            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Login">Login</a>
        }
    </div>
</div>

@*<ul class="navbar-nav ml-auto">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn btn-secondaryk">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>*@